<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端打包部署服务器</title>
      <link href="/2021/12/31/%E5%89%8D%E7%AB%AF%E6%89%93%E5%8C%85/%E5%89%8D%E7%AB%AF%E9%80%9A%E8%BF%87xShell%E6%89%93%E5%8C%85%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2021/12/31/%E5%89%8D%E7%AB%AF%E6%89%93%E5%8C%85/%E5%89%8D%E7%AB%AF%E9%80%9A%E8%BF%87xShell%E6%89%93%E5%8C%85%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>前端通过Shell打包并部署测试服务器</p><span id="more"></span><ol><li><p>打包静态文件,并压缩</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build:prod --report</span><br></pre></td></tr></table></figure></li><li><p>打开xShell</p></li><li><p>cd到根目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /</span><br></pre></td></tr></table></figure></li><li><p>进入项目目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ssjweb/dist</span><br></pre></td></tr></table></figure></li><li><p>备份之前的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv dist.zip  /ssjweb/dist2021418.zip</span><br></pre></td></tr></table></figure><blockquote><p>2021418为当前日期</p></blockquote></li><li><p>删除当前目录所有文件</p><ul><li><p>先执行pwd命令看是否在ssjweb/dist目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br></pre></td></tr></table></figure></li><li><p>如果不是先cd到目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ssjweb/dist</span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf  *</span><br></pre></td></tr></table></figure></li></ul></li><li><p>把dist.zip上传到当前目录 ,拖至命令行</p></li><li><p>解压dist压缩包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip dist.zip</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打包部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 刷新当前页面重新加载数据</title>
      <link href="/2021/12/31/vue%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/md/Vue%20%E5%88%B7%E6%96%B0%E5%BD%93%E5%89%8D%E9%A1%B5%E9%9D%A2%E9%87%8D%E6%96%B0%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE/"/>
      <url>/2021/12/31/vue%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/md/Vue%20%E5%88%B7%E6%96%B0%E5%BD%93%E5%89%8D%E9%A1%B5%E9%9D%A2%E9%87%8D%E6%96%B0%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>Vue 刷新当前页面，提升用户体验的优化方案</p><span id="more"></span><blockquote><p>在新增、修改弹窗提交后通常需要重新加载表格数据，可以通过再次调取表格接口或者刷新当前页面来解决，</p><p>最简单的方法是<code>location.reload()</code>来强制刷新整个页面，这样会导致刷新过程中页面空白，导致用户体验不佳</p><p>在 <code>vue</code> 中可以使用 <code>provide / inject</code> 这对用例,通过控制 <code>router-view</code> 的显示与隐藏，来重渲染路由区域，重而达到页面刷新的效果，<code>show -&gt; flase -&gt; show</code></p></blockquote><ol><li><p>在根目录 <code>APP.vue</code>下写入刷新方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;router-view v-if=&quot;isRouterAlive&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">  provide () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      reload: this.reload</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isRouterAlive: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  methods: &#123;</span><br><span class="line">    reload () &#123;</span><br><span class="line">      this.isRouterAlive = false</span><br><span class="line">      this.$nextTick(function () &#123;</span><br><span class="line">        this.isRouterAlive = true</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在子组件中引用,并在需要刷新的地方调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">   inject: [&#x27;reload&#x27;],</span><br><span class="line">   methods:&#123;</span><br><span class="line">        xxx() &#123;</span><br><span class="line">            this.reload()</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js数据转树形结构</title>
      <link href="/2021/12/31/js%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/md/js%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/"/>
      <url>/2021/12/31/js%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/md/js%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>将后端返回的数据格式转为树形</p><span id="more"></span><blockquote><p>将有父子关系的数组数据先分为两类，一类是没有父节点的数据(取个别名parents)，另一类是有父节点的数据(取个别名children)，然后通过遍历parents,对每一个父节点在children查找对应的子节点,并将其放入父节点的children中(这里我的是以children表示子节点)，然后每个子节点又作为一个父节点来重复之前的动作。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">var aaa = [</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line">                id: 1,</span><br><span class="line">                name: &#x27;1&#x27;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: 2,</span><br><span class="line">                name: &#x27;1-1&#x27;,</span><br><span class="line">                parentId: 1</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: 3,</span><br><span class="line">                name: &#x27;1-1-1&#x27;,</span><br><span class="line">                parentId: 2</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: 4,</span><br><span class="line">                name: &#x27;1-2&#x27;,</span><br><span class="line">                parentId: 1</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: 5,</span><br><span class="line">                name: &#x27;1-2-2&#x27;,</span><br><span class="line">                parentId: 4</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: 6,</span><br><span class="line">                name: &#x27;1-1-1-1&#x27;,</span><br><span class="line">                parentId: 3</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                id: 7,</span><br><span class="line">                name: &#x27;2&#x27;,</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">        </span><br><span class="line">        function translateDataToTree(data) &#123;</span><br><span class="line">            let parents = data.filter(value =&gt; value.parentId == &#x27;undefined&#x27; || value.parentId == null)</span><br><span class="line">            let children = data.filter(value =&gt; value.parentId !== &#x27;undefined&#x27; &amp;&amp; value.parentId != null)</span><br><span class="line">            let translator = (parents, children) =&gt; &#123;</span><br><span class="line">                parents.forEach((parent) =&gt; &#123;</span><br><span class="line">                    children.forEach((current, index) =&gt; &#123;</span><br><span class="line">                        if (current.parentId === parent.id) &#123;</span><br><span class="line">                            let temp = JSON.parse(JSON.stringify(children))</span><br><span class="line">                            temp.splice(index, 1)</span><br><span class="line">                            translator([current], temp)</span><br><span class="line">                            typeof parent.children !== &#x27;undefined&#x27; ? parent.children.push(current) :</span><br><span class="line">                                parent.children = [current]</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            translator(parents, children)</span><br><span class="line">            console.log(parents)</span><br><span class="line"></span><br><span class="line">            return parents</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        translateDataToTree(aaa)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 该方法用于将有父子关系的数组转换成树形结构的数组</span><br><span class="line"> * 接收一个具有父子关系的数组作为参数</span><br><span class="line"> * 返回一个树形结构的数组</span><br><span class="line"> */</span><br><span class="line">function translateDataToTree(data) &#123;</span><br><span class="line">  //没有父节点的数据</span><br><span class="line">  let parents = data.filter(value =&gt; value.parentId == &#x27;undefined&#x27; || value.parentId == null)</span><br><span class="line"> </span><br><span class="line">  //有父节点的数据</span><br><span class="line">  let children = data.filter(value =&gt; value.parentId !== &#x27;undefined&#x27; &amp;&amp; value.parentId != null)</span><br><span class="line"> </span><br><span class="line">  //定义转换方法的具体实现</span><br><span class="line">  let translator = (parents, children) =&gt; &#123;</span><br><span class="line">    //遍历父节点数据</span><br><span class="line">    parents.forEach((parent) =&gt; &#123;</span><br><span class="line">      //遍历子节点数据</span><br><span class="line">      children.forEach((current, index) =&gt; &#123;</span><br><span class="line">        //此时找到父节点对应的一个子节点</span><br><span class="line">        if (current.parentId === parent.id) &#123;</span><br><span class="line">          //对子节点数据进行深复制，这里只支持部分类型的数据深复制，对深复制不了解的童靴可以先去了解下深复制</span><br><span class="line">          let temp = JSON.parse(JSON.stringify(children))</span><br><span class="line">          //让当前子节点从temp中移除，temp作为新的子节点数据，这里是为了让递归时，子节点的遍历次数更少，如果父子关系的层级越多，越有利</span><br><span class="line">          temp.splice(index, 1)</span><br><span class="line">          //让当前子节点作为唯一的父节点，去递归查找其对应的子节点</span><br><span class="line">          translator([current], temp)</span><br><span class="line">          //把找到子节点放入父节点的children属性中</span><br><span class="line">          typeof parent.children !== &#x27;undefined&#x27; ? parent.children.push(current) : parent.children = [current]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  //调用转换方法</span><br><span class="line">  translator(parents, children)</span><br><span class="line"> </span><br><span class="line">  //返回最终的结果</span><br><span class="line">  return parents</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>element-ui 表格编辑</title>
      <link href="/2021/12/31/element-ui%E8%A1%A8%E6%A0%BC%E7%BC%96%E8%BE%91/md/element%20ui%E8%A1%A8%E6%A0%BC%E7%BC%96%E8%BE%91/"/>
      <url>/2021/12/31/element-ui%E8%A1%A8%E6%A0%BC%E7%BC%96%E8%BE%91/md/element%20ui%E8%A1%A8%E6%A0%BC%E7%BC%96%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<p>element-ui 表格编辑</p><p>原理是通过Css控制绑定的输入控件与显示值,在选中行样式下对控件进行隐藏或显示</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;el-button @click=&quot;add&quot;&gt;xz&lt;/el-button&gt;</span><br><span class="line">    &lt;el-table :data=&quot;tableData&quot; class=&quot;tb-edit&quot; style=&quot;width: 100%&quot; highlight-current-row @row-click=&quot;handleCurrentChange&quot;&gt;</span><br><span class="line">      &lt;el-table-column label=&quot;日期&quot; width=&quot;180&quot;&gt;</span><br><span class="line">        &lt;template scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-input size=&quot;small&quot; v-model=&quot;scope.row.date&quot; placeholder=&quot;请输入内容&quot; @change=&quot;handleEdit(scope.$index, scope.row)&quot;&gt;&lt;/el-input&gt; &lt;span&gt;&#123;&#123;scope.row.date&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column label=&quot;姓名&quot; width=&quot;180&quot;&gt;</span><br><span class="line">        &lt;template scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-input size=&quot;small&quot; v-model=&quot;scope.row.name&quot; placeholder=&quot;请输入内容&quot; @change=&quot;handleEdit(scope.$index, scope.row)&quot;&gt;&lt;/el-input&gt; &lt;span&gt;&#123;&#123;scope.row.name&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;address&quot; label=&quot;地址&quot;&gt;</span><br><span class="line">        &lt;template scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-input size=&quot;small&quot; v-model=&quot;scope.row.address&quot; placeholder=&quot;请输入内容&quot; @change=&quot;handleEdit(scope.$index, scope.row)&quot;&gt;&lt;/el-input&gt; &lt;span&gt;&#123;&#123;scope.row.address&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column label=&quot;操作&quot;&gt;</span><br><span class="line">        &lt;template scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;!--&lt;el-button size=&quot;small&quot; @click=&quot;handleEdit(scope.$index, scope.row)&quot;&gt;编辑&lt;/el-button&gt;--&gt;</span><br><span class="line">          &lt;el-button size=&quot;small&quot; type=&quot;danger&quot; @click=&quot;handleDelete(scope.$index, scope.row)&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">    &lt;br&gt;数据:&#123;&#123;tableData&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">tableData</span>: [&#123;</span><br><span class="line">        <span class="attr">date</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;王小虎&#x27;</span>,</span><br><span class="line">        <span class="attr">address</span>: <span class="string">&#x27;上海市杨浦区政立路 1321 弄&#x27;</span></span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="function"><span class="title">handleCurrentChange</span>(<span class="params">row, event, column</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(row, event, column, event.currentTarget)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">handleEdit</span>(<span class="params">index, row</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(index, row);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">handleDelete</span>(<span class="params">index, row</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(index, row);</span><br><span class="line">      <span class="built_in">this</span>.tableData.splice(index,<span class="number">1</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">add</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> addObj = &#123;</span><br><span class="line">        <span class="attr">date</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">address</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">this</span>.tableData.push(addObj)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line"><span class="selector-class">.tb-edit</span> <span class="selector-class">.el-input</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tb-edit</span> <span class="selector-class">.current-row</span> <span class="selector-class">.el-input</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tb-edit</span> <span class="selector-class">.current-row</span> <span class="selector-class">.el-input</span>+<span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>element-ui table表格表头错位</title>
      <link href="/2021/12/30/element-ui%20table%E8%A1%A8%E6%A0%BC%E9%94%99%E4%BD%8D/md/%E8%A1%A8%E6%A0%BC%E9%94%99%E4%BD%8D/"/>
      <url>/2021/12/30/element-ui%20table%E8%A1%A8%E6%A0%BC%E9%94%99%E4%BD%8D/md/%E8%A1%A8%E6%A0%BC%E9%94%99%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<p>element-ui带边框表格，表头出现细微错位，通过css样式解决</p><span id="more"></span><ol><li><p>scss</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">::v-deep.el-table th.gutter &#123;</span><br><span class="line">  display: table-cell !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::v-deep.el-table colgroup.gutter &#123;</span><br><span class="line">  display: table-cell !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>less</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/deep/.el-table th.gutter &#123;</span><br><span class="line">  display: table-cell !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/deep/.el-table colgroup.gutter &#123;</span><br><span class="line">  display: table-cell !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
